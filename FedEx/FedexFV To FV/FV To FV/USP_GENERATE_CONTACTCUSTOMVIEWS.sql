USE [7119_FedEx_II_r1];
--USE [5377_WEIGAND_II_R2];
GO

CREATE OR ALTER PROCEDURE filevine.usp_generate_ContactCustomViews
	@DEBUGFLAG             BIT,
	@DATABASE              VARCHAR(1000),
	@SCHEMANAME            VARCHAR(1000),
	@FVPRODUCTIONPREFIX    VARCHAR(1000),
	@TIMEZONE              VARCHAR(1000)
AS
BEGIN
	DECLARE @DEBUGFLAG    BIT = 1;
	/*#VIEWCONFIG: Contains the configuration values used to dynamically build sql scripts that create views for each Custom Contacts Tab*/

	IF OBJECT_ID('tempdb.dbo.#VIEWCONFIG') IS NOT NULL
	BEGIN
		DROP TABLE #VIEWCONFIG;
	END;

	CREATE TABLE #VIEWCONFIG
	(
		TAB				 NVARCHAR(MAX) NOT NULL,
		VIEWNAME         NVARCHAR(MAX) NOT NULL,
		VIEWHEADER       NVARCHAR(MAX) NOT NULL,
		FIELDID          BIGINT NOT NULL,
		FIELDPOSITION    NVARCHAR(MAX) NOT NULL,
		FIELDSELECTOR    NVARCHAR(MAX) NOT NULL,
		DATATYPE         NVARCHAR(MAX) NOT NULL
	);

	INSERT INTO #VIEWCONFIG
	(
		TAB,
		VIEWNAME,
		VIEWHEADER,
		FIELDID,
		FIELDPOSITION,
		FIELDSELECTOR,
		DATATYPE
	)
	SELECT DISTINCT 
		CF.TAB,
		QUOTENAME('dbo') + '.' + QUOTENAME('vw_CT_' + CF.TAB) AS VIEWNAME,
		'CREATE OR ALTER VIEW ' + QUOTENAME('dbo') + '.' + QUOTENAME('vw_CT_' + CF.TAB) + ' AS ' AS VIEWHEADER,
		CF.FIELDID,
		CF.FIELDPOSITION,
		CF.FIELDSELECTOR,
		CF.DATATYPE
	FROM DBO.__FV_CONTACTCUSTOMFIELDMETADATA AS CF;

	IF @DEBUGFLAG = 1
	BEGIN
		SELECT 
			TAB,
			VIEWNAME,
			VIEWHEADER,
			FIELDID,
			FIELDPOSITION,
			FIELDSELECTOR,
			DATATYPE
		FROM #VIEWCONFIG;
	END;

	/*#TABVIEWS: Contains the dynamically built view creation sql scripts*/

	IF OBJECT_ID('tempdb.dbo.#TABVIEWS') IS NOT NULL
	BEGIN
		DROP TABLE #TABVIEWS;
	END;

	CREATE TABLE #TABVIEWS
	(
		VIEWNAME      NVARCHAR(MAX) NOT NULL,
		FIELDCOUNT    INT NULL,
		SQLTEXT       NVARCHAR(MAX) NULL
	);

	DECLARE 
		@TAB			 NVARCHAR(MAX) = N'',
		@VIEWNAME        NVARCHAR(MAX) = N'',
		@VIEWSQL         NVARCHAR(MAX) = N'',
		@NEWLINE         NVARCHAR(MAX) = CHAR(13) + CHAR(10);

	DECLARE CURSOR_TABS CURSOR
	FOR SELECT DISTINCT 
			TAB,
			VIEWNAME,
			VIEWHEADER
		FROM #VIEWCONFIG
		ORDER BY 
			TAB;

	OPEN CURSOR_TABS;

	FETCH NEXT FROM CURSOR_TABS INTO 
		@TAB,
		@VIEWNAME,
		@VIEWSQL;

	WHILE @@FETCH_STATUS = 0
	BEGIN

		DECLARE 
			@QUERYSQL           NVARCHAR(MAX) = N'',
			@COLUMNS_SEL_GRP    NVARCHAR(MAX) = N'',
			@COLUMNS_SEL_PVT    NVARCHAR(MAX) = N'',
			@FIELDCOUNT         INT           = 0;

		SELECT 
			@FIELDCOUNT = COUNT(VC.FIELDID)
		FROM #VIEWCONFIG AS VC
		WHERE VC.TAB = @TAB;

		SELECT 
			@COLUMNS_SEL_PVT = STUFF(
			(
				SELECT TOP 4096/*MAX # OF TABLE COLUMNS IN SQL SERVER*/
					CHAR(13) + CHAR(10) + ',' + CONVERT(VARCHAR(MAX),
																   CASE
																	   WHEN VC.DATATYPE = 'BIT'
																		   THEN 'CONVERT(' + VC.DATATYPE + ', MAX(IIF(CCFM.[FIELDSELECTOR] = ''' + VC.FIELDSELECTOR + ''', CASE CCFM.[VALUE] WHEN ''1'' THEN 1 WHEN ''0'' THEN 0 END, NULL))) AS ' + QUOTENAME(VC.FIELDSELECTOR)
																	   ELSE 'MAX(IIF(CCFM.[FIELDSELECTOR] = ''' + VC.FIELDSELECTOR + ''', CONVERT(' + VC.DATATYPE + ',CCFM.[VALUE]), NULL)) AS ' + QUOTENAME(VC.FIELDSELECTOR)
																   END)
				FROM #VIEWCONFIG AS VC
				WHERE VC.TAB = @TAB
				ORDER BY 
					VC.FIELDPOSITION,
					VC.FIELDID FOR
				XML PATH(''),TYPE
			).value('.','nvarchar(max)'
			   ),1,0,'')
		FROM #VIEWCONFIG AS CONFIG
		WHERE CONFIG.TAB = @TAB;

		IF @FIELDCOUNT > 0
		BEGIN

			SET @QUERYSQL = @NEWLINE + @NEWLINE 
						   + 'SELECT' + @NEWLINE
						   + 'C.[ContactCustomExternalID] AS [ContactCustomExternalID]' + @COLUMNS_SEL_PVT + @NEWLINE
						   + 'FROM [PT1].[ContactsCustom__ContactInfo] AS C' + @NEWLINE
						   + 'INNER JOIN [dbo].[__FV_ContactCustomFieldMetadata] AS CCFM' + @NEWLINE
						   + 'ON CCFM.[PersonID] = C.[ContactCustomExternalID]' + @NEWLINE
						   + 'WHERE CCFM.[Tab] = ''' + @TAB + '''' + @NEWLINE
						   + 'GROUP BY' + @NEWLINE
						   + 'C.[ContactCustomExternalID]' + ';';
		END;

		IF NULLIF(@QUERYSQL,'') IS NULL
		BEGIN
			SET @QUERYSQL = @NEWLINE + @NEWLINE 
							+ 'SELECT' + @NEWLINE
							+ @VIEWNAME + ' has been created.  No data for this tab was found in the database.'' AS [EMPTYVIEWMESSAGE];';
		END;

		SET @VIEWSQL+=@QUERYSQL + @NEWLINE;

		INSERT INTO #TABVIEWS
		(
			VIEWNAME,
			FIELDCOUNT,
			SQLTEXT
		)
		SELECT 
			@VIEWNAME,
			@FIELDCOUNT,
			@VIEWSQL;
			
		EXEC SP_EXECUTESQL 
			@VIEWSQL;

		PRINT @VIEWNAME + ' has been created.';

		FETCH NEXT FROM CURSOR_TABS INTO 
			@TAB,
			@VIEWNAME,
			@VIEWSQL;
	END;

	CLOSE CURSOR_TABS;

	DEALLOCATE CURSOR_TABS;

	IF @DEBUGFLAG = 1
	BEGIN
		SELECT 
			VIEWNAME,
			FIELDCOUNT,
			SQLTEXT
		FROM #TABVIEWS;
	END;
END;
GO