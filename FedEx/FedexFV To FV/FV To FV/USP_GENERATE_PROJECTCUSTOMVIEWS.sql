
--USE [5377_WEIGAND_II_R2];
GO

CREATE OR ALTER PROCEDURE filevine.usp_generate_ProjectCustomViews
	@DEBUGFLAG             BIT,
	@DATABASE              VARCHAR(1000),
	@SCHEMANAME            VARCHAR(1000),
	@FVPRODUCTIONPREFIX    VARCHAR(1000),
	@TIMEZONE              VARCHAR(1000)
AS
BEGIN
	--DECLARE @DEBUGFLAG    BIT = 1;
	/*#VIEWCONFIG: Contains the configuration values used to dynamically build sql scripts that create views for each ProjectType+Section combination*/

	IF OBJECT_ID('tempdb.dbo.#VIEWCONFIG') IS NOT NULL
	BEGIN
		DROP TABLE #VIEWCONFIG;
	END;

	CREATE TABLE #VIEWCONFIG
	(
		PROJECTTYPE      NVARCHAR(MAX) NOT NULL,
		SECTION          NVARCHAR(MAX) NOT NULL,
		VIEWNAME         NVARCHAR(MAX) NOT NULL,
		VIEWHEADER       NVARCHAR(MAX) NOT NULL,
		ISCOLLECTION     BIT NOT NULL,
		FIELDID          BIGINT NOT NULL,
		FIELDPOSITION    NVARCHAR(MAX) NOT NULL,
		FIELDSELECTOR    NVARCHAR(MAX) NOT NULL,
		DATATYPE         NVARCHAR(MAX) NOT NULL
	);

	INSERT INTO #VIEWCONFIG
	(
		PROJECTTYPE,
		SECTION,
		VIEWNAME,
		VIEWHEADER,
		ISCOLLECTION,
		FIELDID,
		FIELDPOSITION,
		FIELDSELECTOR,
		DATATYPE
	)
	SELECT DISTINCT 
		CF.PROJECTTYPE,
		CF.SECTION,
		QUOTENAME('dbo') + '.' + QUOTENAME('vw_PT_' + CF.PROJECTTYPE + '_' + CF.SECTION) AS VIEWNAME,
		'CREATE OR ALTER VIEW ' + QUOTENAME('dbo') + '.' + QUOTENAME('vw_PT_' + CF.PROJECTTYPE + '_' + CF.SECTION) + ' AS ' AS VIEWHEADER,
		CF.ISCOLLECTION,
		CF.FIELDID,
		CF.FIELDPOSITION,
		CF.FIELDSELECTOR,
		CF.DATATYPE
	FROM DBO.__FV_PROJECTCUSTOMFIELDMETADATA AS CF;

	IF @DEBUGFLAG = 1
	BEGIN
		SELECT 
			PROJECTTYPE,
			SECTION,
			VIEWNAME,
			VIEWHEADER,
			ISCOLLECTION,
			FIELDID,
			FIELDPOSITION,
			FIELDSELECTOR,
			DATATYPE
		FROM #VIEWCONFIG;
	END;

	/*#SECTIONVIEWS: Contains the dynamically built view creation sql scripts*/

	IF OBJECT_ID('tempdb.dbo.#SECTIONVIEWS') IS NOT NULL
	BEGIN
		DROP TABLE #SECTIONVIEWS;
	END;

	CREATE TABLE #SECTIONVIEWS
	(
		VIEWNAME      NVARCHAR(MAX) NOT NULL,
		FIELDCOUNT    INT NULL,
		SQLTEXT       NVARCHAR(MAX) NULL
	);

	DECLARE 
		@PROJECTTYPE     NVARCHAR(MAX) = N'',
		@SECTION         NVARCHAR(MAX) = N'',
		@ISCOLLECTION    BIT           = 0,
		@VIEWNAME        NVARCHAR(MAX) = N'',
		@VIEWSQL         NVARCHAR(MAX) = N'',
		@NEWLINE         NVARCHAR(MAX) = CHAR(13) + CHAR(10);

	DECLARE CURSOR_SECTIONS CURSOR
	FOR SELECT DISTINCT 
			PROJECTTYPE,
			SECTION,
			ISCOLLECTION,
			VIEWNAME,
			VIEWHEADER
		FROM #VIEWCONFIG
		ORDER BY 
			PROJECTTYPE,
			SECTION;

	OPEN CURSOR_SECTIONS;

	FETCH NEXT FROM CURSOR_SECTIONS INTO 
		@PROJECTTYPE,
		@SECTION,
		@ISCOLLECTION,
		@VIEWNAME,
		@VIEWSQL;

	WHILE @@FETCH_STATUS = 0
	BEGIN

		DECLARE 
			@QUERYSQL                   NVARCHAR(MAX) = N'',
			@COLUMNS_SEL_GRP_ALIASED    NVARCHAR(MAX) = N'',
			@COLUMNS_SEL_GRP            NVARCHAR(MAX) = N'',
			@COLUMNS_SEL_PVT            NVARCHAR(MAX) = N'',
			@FIELDCOUNT                 INT           = 0;

		SET @COLUMNS_SEL_GRP_ALIASED = CASE
										   WHEN @ISCOLLECTION = 0
											   THEN 'PCFM.[ProjectID] AS ProjectExternalID'
										   WHEN @ISCOLLECTION = 1
											   THEN 'PCFM.[ProjectID] AS ProjectExternalID' + ',' + @NEWLINE
												+ '''' + @PROJECTTYPE + ''' + ''_'' + ''' + @SECTION + ''' + ''_'' +  PCFM.[CollectionItemGUID] AS CollectionItemExternalID'
									   END;

		SET @COLUMNS_SEL_GRP = CASE
								   WHEN @ISCOLLECTION = 0
									   THEN 'PCFM.[ProjectID]'
								   WHEN @ISCOLLECTION = 1
									   THEN 'PCFM.[ProjectID]' + ',' + @NEWLINE
										+ '''' + @PROJECTTYPE + ''' + ''_'' + ''' + @SECTION + ''' + ''_'' +  PCFM.[CollectionItemGUID]'
							   END;
		SELECT 
			@FIELDCOUNT = COUNT(VC.FIELDID)
		FROM #VIEWCONFIG AS VC
		WHERE VC.PROJECTTYPE = @PROJECTTYPE AND VC.SECTION = @SECTION;

		SELECT 
			@COLUMNS_SEL_PVT = STUFF(
			(
				SELECT TOP 4096/*MAX # OF TABLE COLUMNS IN SQL SERVER*/
					CHAR(13) + CHAR(10) + ',' + CONVERT(VARCHAR(MAX),
																   CASE
																	   WHEN VC.DATATYPE = 'BIT'
																		   THEN 'CONVERT(' + VC.DATATYPE + ', MAX(CASE WHEN PCFM.[FIELDSELECTOR] = ''' + VC.FIELDSELECTOR + ''' THEN IIF(PCFM.[VALUE] = ''1'',1,0) END)) AS ' + QUOTENAME(VC.FIELDSELECTOR)
																	   ELSE 'MAX(CASE WHEN PCFM.[FIELDSELECTOR] = ''' + VC.FIELDSELECTOR + ''' THEN CONVERT(' + VC.DATATYPE + ',PCFM.[VALUE]) END) AS ' + QUOTENAME(VC.FIELDSELECTOR)
																   END)
				FROM #VIEWCONFIG AS VC
				WHERE VC.PROJECTTYPE = @PROJECTTYPE AND VC.SECTION = @SECTION
				ORDER BY 
					VC.FIELDPOSITION,
					VC.FIELDID FOR
				XML PATH(''),TYPE
			).value('.','nvarchar(max)'
			   ),1,0,'')
		FROM #VIEWCONFIG AS CONFIG
		WHERE CONFIG.PROJECTTYPE = @PROJECTTYPE AND CONFIG.SECTION = @SECTION;

		IF @FIELDCOUNT > 0
		BEGIN

			SET @QUERYSQL += @NEWLINE + @NEWLINE 
						   + 'SELECT' + @NEWLINE
						   + @COLUMNS_SEL_GRP_ALIASED + @COLUMNS_SEL_PVT + @NEWLINE
						   + 'FROM [dbo].[__FV_ClientCaseMap] AS CCM' + @NEWLINE
						   + 'INNER JOIN [DBO].[__FV_ProjectCustomFieldMetadata] AS PCFM' + @NEWLINE
						   + 'ON PCFM.[ProjectID] = CCM.[ProjectExternalID]' + @NEWLINE
						   + 'WHERE PCFM.[ProjectType] = ''' + @PROJECTTYPE + '''' + @NEWLINE
						   + 'AND PCFM.[Section] = ''' + @SECTION + '''' + @NEWLINE
						   + 'GROUP BY' + @NEWLINE
						   + @COLUMNS_SEL_GRP + ';';
		END;

		IF NULLIF(@QUERYSQL,'') IS NULL
		BEGIN
			SET @QUERYSQL = @NEWLINE + @NEWLINE 
							+ 'SELECT' + @NEWLINE
							+ @VIEWNAME + ' has been created.  No data for this section was found in the database.'' AS [EMPTYVIEWMESSAGE];';
		END;

		SET @VIEWSQL+=@QUERYSQL + @NEWLINE;

		INSERT INTO #SECTIONVIEWS
		(
			VIEWNAME,
			FIELDCOUNT,
			SQLTEXT
		)
		SELECT 
			@VIEWNAME,
			@FIELDCOUNT,
			@VIEWSQL;

		BEGIN TRY
			EXEC SP_EXECUTESQL 
				@VIEWSQL;
			PRINT @VIEWNAME + ' has been created.';
		END TRY
		BEGIN CATCH
			PRINT ERROR_MESSAGE();
		END CATCH;

		FETCH NEXT FROM CURSOR_SECTIONS INTO 
			@PROJECTTYPE,
			@SECTION,
			@ISCOLLECTION,
			@VIEWNAME,
			@VIEWSQL;
	END;

	CLOSE CURSOR_SECTIONS;

	DEALLOCATE CURSOR_SECTIONS;

	IF @DEBUGFLAG = 1
	BEGIN
		SELECT 
			VIEWNAME,
			FIELDCOUNT,
			SQLTEXT
		FROM #SECTIONVIEWS;
	END;
END;
GO